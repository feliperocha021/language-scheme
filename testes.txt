(define (square x)
  (* x x))
(square 4)

(define sum
  (lambda (a b c)
    (+ a b c)))
(sum 4 5 6)

((lambda(x y z) (+ x y z)) 4 5 6)

(define (fatorial n)
  (if (= n 0)
      1
      (* n (fatorial (- n 1)))
      )
)
(fatorial 5)

(define (pos lista atomo)
  (if (eq? (car lista) atomo)
      0
      (+ 1 (pos (cdr lista) atomo))
      )
)
(display (pos '(A B C D) 'C))

(define (qtd lista)
  (if (null? lista)
      0
      (+ 1 (qtd (cdr lista)))
      )
)
(qtd '(A B C D E))

(define (soma lista)
  (if (null? lista)
      0
      (+ (car lista) (soma (cdr lista)))
      )
)
(soma '(1 2 3))

(define (fib n)
  (if (= n 0)
      0
      (if (= n 1)
          1
          (+ (fib (- n 1)) (fib (- n 2))))
	  )
  )
(fib 7)

(define (pot a b)
  (if (= b 0)
      1
      (* a (pot a (- b 1)))
      )
  )
(pot 2 3)

(define (qtdZeros lst)
  (if (null? lst)
      0
      (if (= 0 (car lst))
          (+ 1 (qtdZeros (cdr lst)))
          (+ 0 (qtdZeros (cdr lst)))
          )
      )
)
(qtdZeros '(3 0 2 0))
